// <auto-generated />
using System;
using DataAccess.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240524184745_DataSeedMigration")]
    partial class DataSeedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Kristiansand",
                            Country = "Norway",
                            PostalCode = "12345",
                            State = "Agder",
                            Street = "123 Main St",
                            StreetNumber = "11"
                        },
                        new
                        {
                            Id = 2,
                            City = "Sydney",
                            Country = "Australia",
                            PostalCode = "67890",
                            State = "Sydney",
                            Street = "456 Elm St",
                            StreetNumber = "23"
                        },
                        new
                        {
                            Id = 3,
                            City = "Oslo",
                            Country = "Norway",
                            PostalCode = "3453",
                            State = "Oslo",
                            Street = "643 Main St",
                            StreetNumber = "1"
                        },
                        new
                        {
                            Id = 4,
                            City = "Boston",
                            Country = "USA",
                            PostalCode = "6450",
                            State = "Massachusetts",
                            Street = "4 Elm St",
                            StreetNumber = "3"
                        },
                        new
                        {
                            Id = 5,
                            City = "Melbourne",
                            Country = "Australia",
                            PostalCode = "67812",
                            State = "Victoria",
                            Street = "789 Maple Ave",
                            StreetNumber = "5"
                        },
                        new
                        {
                            Id = 6,
                            City = "Beverly Hills",
                            Country = "USA",
                            PostalCode = "90210",
                            State = "California",
                            Street = "101 Oak St",
                            StreetNumber = "14"
                        },
                        new
                        {
                            Id = 7,
                            City = "Boulder",
                            Country = "USA",
                            PostalCode = "80301",
                            State = "Colorado",
                            Street = "202 Pine St",
                            StreetNumber = "7"
                        },
                        new
                        {
                            Id = 8,
                            City = "New York",
                            Country = "USA",
                            PostalCode = "10001",
                            State = "New York",
                            Street = "303 Cedar St",
                            StreetNumber = "8"
                        },
                        new
                        {
                            Id = 9,
                            City = "Washington",
                            Country = "USA",
                            PostalCode = "20001",
                            State = "District of Columbia",
                            Street = "404 Birch St",
                            StreetNumber = "9"
                        },
                        new
                        {
                            Id = 10,
                            City = "San Francisco",
                            Country = "USA",
                            PostalCode = "94102",
                            State = "California",
                            Street = "505 Spruce St",
                            StreetNumber = "10"
                        },
                        new
                        {
                            Id = 11,
                            City = "Chicago",
                            Country = "USA",
                            PostalCode = "60601",
                            State = "Illinois",
                            Street = "606 Walnut St",
                            StreetNumber = "11"
                        },
                        new
                        {
                            Id = 12,
                            City = "Dallas",
                            Country = "USA",
                            PostalCode = "75201",
                            State = "Texas",
                            Street = "707 Chestnut St",
                            StreetNumber = "12"
                        },
                        new
                        {
                            Id = 13,
                            City = "Seattle",
                            Country = "USA",
                            PostalCode = "98101",
                            State = "Washington",
                            Street = "808 Aspen St",
                            StreetNumber = "13"
                        },
                        new
                        {
                            Id = 14,
                            City = "Atlanta",
                            Country = "USA",
                            PostalCode = "30301",
                            State = "Georgia",
                            Street = "909 Poplar St",
                            StreetNumber = "14"
                        },
                        new
                        {
                            Id = 15,
                            City = "Los Angeles",
                            Country = "USA",
                            PostalCode = "90001",
                            State = "California",
                            Street = "1010 Redwood St",
                            StreetNumber = "15"
                        },
                        new
                        {
                            Id = 16,
                            City = "Houston",
                            Country = "USA",
                            PostalCode = "77001",
                            State = "Texas",
                            Street = "1111 Palm St",
                            StreetNumber = "16"
                        },
                        new
                        {
                            Id = 17,
                            City = "Minneapolis",
                            Country = "USA",
                            PostalCode = "55401",
                            State = "Minnesota",
                            Street = "1212 Cedar Ave",
                            StreetNumber = "17"
                        },
                        new
                        {
                            Id = 18,
                            City = "Austin",
                            Country = "USA",
                            PostalCode = "73301",
                            State = "Texas",
                            Street = "1313 Ash St",
                            StreetNumber = "18"
                        },
                        new
                        {
                            Id = 19,
                            City = "Phoenix",
                            Country = "USA",
                            PostalCode = "85001",
                            State = "Arizona",
                            Street = "1414 Elm Dr",
                            StreetNumber = "19"
                        },
                        new
                        {
                            Id = 20,
                            City = "Detroit",
                            Country = "USA",
                            PostalCode = "48201",
                            State = "Michigan",
                            Street = "1515 Maple Ln",
                            StreetNumber = "20"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.CommunicationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("CommunicationDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Email = "john.doe@example.com",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Email = "jane.smith@example.com",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Email = "john.wick@example.com",
                            PhoneNumber = "823-456-7894"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            Email = "john.snow@example.com",
                            PhoneNumber = "287-654-3213"
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 5,
                            Email = "alice.johnson@example.com",
                            PhoneNumber = "123-789-4561"
                        },
                        new
                        {
                            Id = 6,
                            AddressId = 6,
                            Email = "bob.brown@example.com",
                            PhoneNumber = "321-654-9872"
                        },
                        new
                        {
                            Id = 7,
                            AddressId = 7,
                            Email = "charlie.davis@example.com",
                            PhoneNumber = "456-123-7893"
                        },
                        new
                        {
                            Id = 8,
                            AddressId = 8,
                            Email = "diana.evans@example.com",
                            PhoneNumber = "654-987-3214"
                        },
                        new
                        {
                            Id = 9,
                            AddressId = 9,
                            Email = "ethan.harris@example.com",
                            PhoneNumber = "789-456-1235"
                        },
                        new
                        {
                            Id = 10,
                            AddressId = 10,
                            Email = "fiona.clark@example.com",
                            PhoneNumber = "987-321-6546"
                        },
                        new
                        {
                            Id = 11,
                            AddressId = 11,
                            Email = "george.hill@example.com",
                            PhoneNumber = "123-654-9877"
                        },
                        new
                        {
                            Id = 12,
                            AddressId = 12,
                            Email = "hannah.lewis@example.com",
                            PhoneNumber = "321-987-6548"
                        },
                        new
                        {
                            Id = 13,
                            AddressId = 13,
                            Email = "ian.martinez@example.com",
                            PhoneNumber = "456-789-1239"
                        },
                        new
                        {
                            Id = 14,
                            AddressId = 14,
                            Email = "jackie.taylor@example.com",
                            PhoneNumber = "654-321-9870"
                        },
                        new
                        {
                            Id = 15,
                            AddressId = 15,
                            Email = "karen.wilson@example.com",
                            PhoneNumber = "789-123-4561"
                        },
                        new
                        {
                            Id = 16,
                            AddressId = 16,
                            Email = "liam.king@example.com",
                            PhoneNumber = "987-654-3212"
                        },
                        new
                        {
                            Id = 17,
                            AddressId = 17,
                            Email = "mia.scott@example.com",
                            PhoneNumber = "123-456-7893"
                        },
                        new
                        {
                            Id = 18,
                            AddressId = 18,
                            Email = "nathan.walker@example.com",
                            PhoneNumber = "321-654-9874"
                        },
                        new
                        {
                            Id = 19,
                            AddressId = 19,
                            Email = "olivia.adams@example.com",
                            PhoneNumber = "456-789-1235"
                        },
                        new
                        {
                            Id = 20,
                            AddressId = 20,
                            Email = "paul.baker@example.com",
                            PhoneNumber = "654-987-3216"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommunicationDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationDetailId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommunicationDetailId = 1,
                            CustomerName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            CommunicationDetailId = 2,
                            CustomerName = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            CommunicationDetailId = 3,
                            CustomerName = "John Wick"
                        },
                        new
                        {
                            Id = 4,
                            CommunicationDetailId = 4,
                            CustomerName = "John Snow"
                        },
                        new
                        {
                            Id = 5,
                            CommunicationDetailId = 5,
                            CustomerName = "Alice Johnson"
                        },
                        new
                        {
                            Id = 6,
                            CommunicationDetailId = 6,
                            CustomerName = "Bob Brown"
                        },
                        new
                        {
                            Id = 7,
                            CommunicationDetailId = 7,
                            CustomerName = "Charlie Davis"
                        },
                        new
                        {
                            Id = 8,
                            CommunicationDetailId = 8,
                            CustomerName = "Diana Evans"
                        },
                        new
                        {
                            Id = 9,
                            CommunicationDetailId = 9,
                            CustomerName = "Ethan Harris"
                        },
                        new
                        {
                            Id = 10,
                            CommunicationDetailId = 10,
                            CustomerName = "Fiona Clark"
                        },
                        new
                        {
                            Id = 11,
                            CommunicationDetailId = 11,
                            CustomerName = "George Hill"
                        },
                        new
                        {
                            Id = 12,
                            CommunicationDetailId = 12,
                            CustomerName = "Hannah Lewis"
                        },
                        new
                        {
                            Id = 13,
                            CommunicationDetailId = 13,
                            CustomerName = "Ian Martinez"
                        },
                        new
                        {
                            Id = 14,
                            CommunicationDetailId = 14,
                            CustomerName = "Jackie Taylor"
                        },
                        new
                        {
                            Id = 15,
                            CommunicationDetailId = 15,
                            CustomerName = "Karen Wilson"
                        },
                        new
                        {
                            Id = 16,
                            CommunicationDetailId = 16,
                            CustomerName = "Liam King"
                        },
                        new
                        {
                            Id = 17,
                            CommunicationDetailId = 17,
                            CustomerName = "Mia Scott"
                        },
                        new
                        {
                            Id = 18,
                            CommunicationDetailId = 18,
                            CustomerName = "Nathan Walker"
                        },
                        new
                        {
                            Id = 19,
                            CommunicationDetailId = 19,
                            CustomerName = "Olivia Adams"
                        },
                        new
                        {
                            Id = 20,
                            CommunicationDetailId = 20,
                            CustomerName = "Paul Baker"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Large construction equipment",
                            Name = "Excavator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Heavy equipment for pushing earth",
                            Name = "Bulldozer"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Equipment used to lift and move materials",
                            Name = "Crane"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Truck used for transporting loose materials",
                            Name = "Dump Truck"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Machine used for moving and loading materials",
                            Name = "Loader"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Excavating and trenching equipment",
                            Name = "Backhoe"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Equipment used to create a flat surface",
                            Name = "Grader"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Vehicle used for lifting and moving materials",
                            Name = "Forklift"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Equipment used to drive piles into the soil",
                            Name = "Pile Driver"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Equipment used to lay asphalt on roads",
                            Name = "Paver"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Machine used to reduce the size of waste material",
                            Name = "Compactor"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Small rigid-frame, engine-powered machine",
                            Name = "Skid Steer Loader"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Equipment used to create holes in the earth",
                            Name = "Drill Rig"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Equipment used to dig trenches",
                            Name = "Trencher"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Large excavator with a bucket",
                            Name = "Dragline Excavator"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Equipment used to mix concrete",
                            Name = "Concrete Mixer"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Equipment used for transferring liquid concrete",
                            Name = "Concrete Pump"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Crane used in the construction of tall buildings",
                            Name = "Tower Crane"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Truck used for transporting concrete",
                            Name = "Cement Truck"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Equipment used to lay asphalt on roads",
                            Name = "Asphalt Paver"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Machine used to remove asphalt or concrete",
                            Name = "Cold Planer"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Equipment used for earthmoving",
                            Name = "Scraper"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Equipment used to lift materials",
                            Name = "Telehandler"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Equipment used to compact soil",
                            Name = "Roller"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Machine used to compress materials",
                            Name = "Compactor"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Equipment used to provide temporary access",
                            Name = "Boom Lift"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Lift used to provide access to high places",
                            Name = "Scissor Lift"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Tool used for demolition",
                            Name = "Hydraulic Hammer"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Machine used to create boreholes",
                            Name = "Pile Boring Machine"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Machine used to excavate tunnels",
                            Name = "Tunnel Boring Machine"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Equipment used to create a flat surface",
                            Name = "Motor Grader"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Vehicle used for pulling logs",
                            Name = "Skidder"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Machine used for harvesting crops",
                            Name = "Harvester"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Vehicle used for carrying logs",
                            Name = "Forwarder"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EquipmentShippingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionalNotes")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("DestinationAddressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SendingAddressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DestinationAddressId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SendingAddressId");

                    b.ToTable("EquipmentShippingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalNotes = "Handle with care",
                            DestinationAddressId = 2,
                            EquipmentId = 1,
                            Quantity = 2,
                            SendingAddressId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdditionalNotes = "Deliver during business hours",
                            DestinationAddressId = 3,
                            EquipmentId = 2,
                            Quantity = 3,
                            SendingAddressId = 2
                        },
                        new
                        {
                            Id = 3,
                            AdditionalNotes = "Fragile equipment",
                            DestinationAddressId = 4,
                            EquipmentId = 3,
                            Quantity = 1,
                            SendingAddressId = 3
                        },
                        new
                        {
                            Id = 4,
                            AdditionalNotes = "Ensure safety protocols",
                            DestinationAddressId = 5,
                            EquipmentId = 4,
                            Quantity = 5,
                            SendingAddressId = 4
                        },
                        new
                        {
                            Id = 5,
                            AdditionalNotes = "Check for damage upon arrival",
                            DestinationAddressId = 6,
                            EquipmentId = 5,
                            Quantity = 4,
                            SendingAddressId = 5
                        },
                        new
                        {
                            Id = 6,
                            AdditionalNotes = "Keep dry",
                            DestinationAddressId = 7,
                            EquipmentId = 6,
                            Quantity = 2,
                            SendingAddressId = 6
                        },
                        new
                        {
                            Id = 7,
                            AdditionalNotes = "Heavy load",
                            DestinationAddressId = 8,
                            EquipmentId = 7,
                            Quantity = 6,
                            SendingAddressId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdditionalNotes = "Ensure proper handling",
                            DestinationAddressId = 9,
                            EquipmentId = 8,
                            Quantity = 3,
                            SendingAddressId = 8
                        },
                        new
                        {
                            Id = 9,
                            AdditionalNotes = "High value item",
                            DestinationAddressId = 10,
                            EquipmentId = 9,
                            Quantity = 7,
                            SendingAddressId = 9
                        },
                        new
                        {
                            Id = 10,
                            AdditionalNotes = "Secure packaging required",
                            DestinationAddressId = 1,
                            EquipmentId = 10,
                            Quantity = 2,
                            SendingAddressId = 10
                        });
                });

            modelBuilder.Entity("Entities.Concrete.EquipmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentShippingDetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EquipmentShippingDetailId");

                    b.ToTable("EquipmentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            EquipmentShippingDetailId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EquipmentShippingDetailId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            EquipmentShippingDetailId = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            EquipmentShippingDetailId = 4
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            EquipmentShippingDetailId = 5
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 6,
                            EquipmentShippingDetailId = 6
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 7,
                            EquipmentShippingDetailId = 7
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 8,
                            EquipmentShippingDetailId = 8
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 9,
                            EquipmentShippingDetailId = 9
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 10,
                            EquipmentShippingDetailId = 10
                        });
                });

            modelBuilder.Entity("Entities.Concrete.GpsPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentStatusId");

                    b.ToTable("GpsPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EquipmentStatusId = 1,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8607)
                        },
                        new
                        {
                            Id = 2,
                            EquipmentStatusId = 1,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8609)
                        },
                        new
                        {
                            Id = 3,
                            EquipmentStatusId = 1,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8609)
                        },
                        new
                        {
                            Id = 4,
                            EquipmentStatusId = 1,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8610)
                        },
                        new
                        {
                            Id = 5,
                            EquipmentStatusId = 1,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8611)
                        },
                        new
                        {
                            Id = 6,
                            EquipmentStatusId = 1,
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8612)
                        },
                        new
                        {
                            Id = 7,
                            EquipmentStatusId = 1,
                            Latitude = -33.8688,
                            Longitude = 151.20930000000001,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8612)
                        },
                        new
                        {
                            Id = 8,
                            EquipmentStatusId = 1,
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8613)
                        },
                        new
                        {
                            Id = 9,
                            EquipmentStatusId = 1,
                            Latitude = 55.755800000000001,
                            Longitude = 37.617600000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8614)
                        },
                        new
                        {
                            Id = 10,
                            EquipmentStatusId = 1,
                            Latitude = -22.9068,
                            Longitude = -43.172899999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8614)
                        },
                        new
                        {
                            Id = 11,
                            EquipmentStatusId = 1,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8615)
                        },
                        new
                        {
                            Id = 12,
                            EquipmentStatusId = 1,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8616)
                        },
                        new
                        {
                            Id = 13,
                            EquipmentStatusId = 2,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8616)
                        },
                        new
                        {
                            Id = 14,
                            EquipmentStatusId = 2,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8617)
                        },
                        new
                        {
                            Id = 15,
                            EquipmentStatusId = 2,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8618)
                        },
                        new
                        {
                            Id = 16,
                            EquipmentStatusId = 2,
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8618)
                        },
                        new
                        {
                            Id = 17,
                            EquipmentStatusId = 2,
                            Latitude = -33.8688,
                            Longitude = 151.20930000000001,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8619)
                        },
                        new
                        {
                            Id = 18,
                            EquipmentStatusId = 2,
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8619)
                        },
                        new
                        {
                            Id = 19,
                            EquipmentStatusId = 2,
                            Latitude = 55.755800000000001,
                            Longitude = 37.617600000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8620)
                        },
                        new
                        {
                            Id = 20,
                            EquipmentStatusId = 2,
                            Latitude = -22.9068,
                            Longitude = -43.172899999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8621)
                        },
                        new
                        {
                            Id = 21,
                            EquipmentStatusId = 1,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8621)
                        },
                        new
                        {
                            Id = 22,
                            EquipmentStatusId = 1,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8622)
                        },
                        new
                        {
                            Id = 23,
                            EquipmentStatusId = 2,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8623)
                        },
                        new
                        {
                            Id = 24,
                            EquipmentStatusId = 2,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8623)
                        },
                        new
                        {
                            Id = 25,
                            EquipmentStatusId = 2,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8624)
                        },
                        new
                        {
                            Id = 26,
                            EquipmentStatusId = 2,
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8625)
                        },
                        new
                        {
                            Id = 27,
                            EquipmentStatusId = 3,
                            Latitude = -33.8688,
                            Longitude = 151.20930000000001,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8625)
                        },
                        new
                        {
                            Id = 28,
                            EquipmentStatusId = 7,
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8626)
                        },
                        new
                        {
                            Id = 29,
                            EquipmentStatusId = 8,
                            Latitude = 55.755800000000001,
                            Longitude = 37.617600000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8627)
                        },
                        new
                        {
                            Id = 30,
                            EquipmentStatusId = 9,
                            Latitude = -22.9068,
                            Longitude = -43.172899999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8627)
                        },
                        new
                        {
                            Id = 31,
                            EquipmentStatusId = 1,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8628)
                        },
                        new
                        {
                            Id = 32,
                            EquipmentStatusId = 1,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8629)
                        },
                        new
                        {
                            Id = 33,
                            EquipmentStatusId = 2,
                            Latitude = 51.507399999999997,
                            Longitude = -0.1278,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8629)
                        },
                        new
                        {
                            Id = 34,
                            EquipmentStatusId = 2,
                            Latitude = 48.8566,
                            Longitude = 2.3521999999999998,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8630)
                        },
                        new
                        {
                            Id = 35,
                            EquipmentStatusId = 2,
                            Latitude = 37.774900000000002,
                            Longitude = -122.4194,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8631)
                        },
                        new
                        {
                            Id = 36,
                            EquipmentStatusId = 2,
                            Latitude = 35.689500000000002,
                            Longitude = 139.6917,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8631)
                        },
                        new
                        {
                            Id = 37,
                            EquipmentStatusId = 3,
                            Latitude = -33.8688,
                            Longitude = 151.20930000000001,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8632)
                        },
                        new
                        {
                            Id = 38,
                            EquipmentStatusId = 7,
                            Latitude = 41.878100000000003,
                            Longitude = -87.629800000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8633)
                        },
                        new
                        {
                            Id = 39,
                            EquipmentStatusId = 8,
                            Latitude = 55.755800000000001,
                            Longitude = 37.617600000000003,
                            Timestamp = new DateTime(2024, 5, 24, 18, 47, 44, 820, DateTimeKind.Utc).AddTicks(8633)
                        });
                });

            modelBuilder.Entity("Entities.Concrete.CommunicationDetail", b =>
                {
                    b.HasOne("Entities.Concrete.Address", "CustomerAddress")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerAddress");
                });

            modelBuilder.Entity("Entities.Concrete.Customer", b =>
                {
                    b.HasOne("Entities.Concrete.CommunicationDetail", "CustomerCommunicationDetail")
                        .WithMany()
                        .HasForeignKey("CommunicationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerCommunicationDetail");
                });

            modelBuilder.Entity("Entities.Concrete.EquipmentShippingDetail", b =>
                {
                    b.HasOne("Entities.Concrete.Address", "DestinationAddress")
                        .WithMany()
                        .HasForeignKey("DestinationAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Address", "SendingAddress")
                        .WithMany()
                        .HasForeignKey("SendingAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationAddress");

                    b.Navigation("Equipment");

                    b.Navigation("SendingAddress");
                });

            modelBuilder.Entity("Entities.Concrete.EquipmentStatus", b =>
                {
                    b.HasOne("Entities.Concrete.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.EquipmentShippingDetail", "EquipmentShippingDetail")
                        .WithMany()
                        .HasForeignKey("EquipmentShippingDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("EquipmentShippingDetail");
                });

            modelBuilder.Entity("Entities.Concrete.GpsPosition", b =>
                {
                    b.HasOne("Entities.Concrete.EquipmentStatus", "EquipmentStatus")
                        .WithMany("GpsPositions")
                        .HasForeignKey("EquipmentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentStatus");
                });

            modelBuilder.Entity("Entities.Concrete.EquipmentStatus", b =>
                {
                    b.Navigation("GpsPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
